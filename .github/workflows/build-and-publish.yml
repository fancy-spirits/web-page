name: Build and publish Webpage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-web:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PWD }}
        
    - name: Pull most recent image
      run: docker pull doxblek/fancy-spirits-webpage:latest
      
    - name: Create Version Tag
      run: echo "TAG=$(date +%s)" >> $GITHUB_ENV
        
    - name: Build the Docker image (Web)
      run: |
        docker build . --file Dockerfile --tag doxblek/fancy-spirits-webpage:$TAG --tag doxblek/fancy-spirits-webpage:latest
        
    - name: Push the Docker Image 
      run: |
        docker push doxblek/fancy-spirits-webpage:$TAG
        docker push doxblek/fancy-spirits-webpage:latest

  build-db:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PWD }}

    - name: Pull most recent image
      run: docker pull doxblek/fancy-spirits-webpage-db:latest
      
    - name: Create Version Tag
      run: echo "TAG=$(date +%s)" >> $GITHUB_ENV

    - name: Build the Docker image (DB)
      run: |
        cd database
        docker build . --file Dockerfile --tag doxblek/fancy-spirits-webpage-db:$TAG --tag doxblek/fancy-spirits-webpage-db:latest
        
    - name: Push the Docker Image 
      run: |
        docker push doxblek/fancy-spirits-webpage-db:$TAG
        docker push doxblek/fancy-spirits-webpage-db:latest

  build-api:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PWD }}

    - name: Pull most recent image
      run: docker pull doxblek/fancy-spirits-webpage-api:latest
      
    - name: Create Version Tag
      run: echo "TAG=$(date +%s)" >> $GITHUB_ENV

    - name: Build the Docker image (API)
      run: |
        cd api
        docker build . --file Dockerfile --tag doxblek/fancy-spirits-webpage-api:$TAG --tag doxblek/fancy-spirits-webpage-api:latest
        
    - name: Push the Docker Image 
      run: |
        docker push doxblek/fancy-spirits-webpage-api:$TAG
        docker push doxblek/fancy-spirits-webpage-api:latest

  # deploy:
    # needs: [build-web, build-db, build-api]
    # runs-on: ubuntu-latest
    
    # steps:
    # - name: Stop old container (webpage)
    #   uses: cross-the-world/ssh-pipeline@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     user: ${{ secrets.SSH_USER }}
    #     pass: ${{ secrets.SSH_USER_PWD }}
    #     script: |
    #       ([ ! -z "$(docker ps -a | grep fancy-spirits-webpage)" ] && (docker stop fancy-spirits-webpage && echo "Stopped existing container") || echo "No existing container...")
    
    # - name: Stop old container (db)
    #   uses: cross-the-world/ssh-pipeline@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     user: ${{ secrets.SSH_USER }}
    #     pass: ${{ secrets.SSH_USER_PWD }}
    #     script: |
    #       ([ ! -z "$(docker ps -a | grep fancy-spirits-webpage-db)" ] && (docker stop fancy-spirits-webpage-db && echo "Stopped existing container") || echo "No existing container...")

    # - name: Stop old container (api)
    #   uses: cross-the-world/ssh-pipeline@master
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     user: ${{ secrets.SSH_USER }}
    #     pass: ${{ secrets.SSH_USER_PWD }}
    #     script: |
    #       ([ ! -z "$(docker ps -a | grep fancy-spirits-webpage-api)" ] && (docker stop fancy-spirits-webpage-api && echo "Stopped existing container") || echo "No existing container...")
        
    # - name: Pull and Run Docker Image via SSH (db)
    #   uses: cross-the-world/ssh-pipeline@master
    #   env:
    #     POSTGRES_FANCY_SPIRITS_USER: ${{ secrets.POSTGRES_FANCY_SPIRITS_USER }}
    #     POSTGRES_FANCY_SPIRITS_PASSWORD: ${{ secrets.POSTGRES_FANCY_SPIRITS_PASSWORD }}
    #     POSTGRES_ADMIN_PASSWORD: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     user: ${{ secrets.SSH_USER }}
    #     pass: ${{ secrets.SSH_USER_PWD }}
    #     script: |
    #       (docker pull doxblek/fancy-spirits-webpage-db:latest)
    #       (docker run --rm -d -it -p 5432:5432 --name fancy-spirits-webpage-db -e POSTGRES_PASSWORD="$POSTGRES_ADMIN_PASSWORD" doxblek/fancy-spirits-webpage-db)
    
    # - name: Pull and Run Docker Image via SSH (api)
    #   uses: cross-the-world/ssh-pipeline@master
    #   env:
    #     DB_USER: ${{ secrets.POSTGRES_FANCY_SPIRITS_USER }}
    #     DB_PASSWORD: ${{ secrets.POSTGRES_FANCY_SPIRITS_PASSWORD }}
    #     DB_NAME: fancy_spirits
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     user: ${{ secrets.SSH_USER }}
    #     pass: ${{ secrets.SSH_USER_PWD }}
    #     script: |
    #       (docker pull doxblek/fancy-spirits-webpage-api:latest)
    #       (docker run --rm -d -it -p 5000:5000 --name fancy-spirits-webpage-api doxblek/fancy-spirits-webpage-api)

    # - name: Pull and Run Docker Image via SSH (webpage)
      # uses: cross-the-world/ssh-pipeline@master
      # with:
      #   host: ${{ secrets.SSH_HOST }}
      #   user: ${{ secrets.SSH_USER }}
      #   pass: ${{ secrets.SSH_USER_PWD }}
      #   script: |
      #     (docker pull doxblek/fancy-spirits-webpage:latest)
      #     (docker run --rm -d -it -p 80:80 --name fancy-spirits-webpage doxblek/fancy-spirits-webpage)
        
  deploy:
    needs:
      - build-web
      - build-db
      - build-api

    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Stop old deployment
        continue-on-error: true
        uses: cross-the-world/ssh-pipeline@master
        env:
          DEPLOY_DIR: ${{ secrets.SSH_TARGET_DIR }}
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          pass: ${{ secrets.SSH_USER_PWD }}
          script: |
            cd $DEPLOY_DIR
            docker compose down 

      # - name: Transfer new docker-compose.yml
      #   uses: easingthemes/ssh-deploy@main
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     REMOTE_HOST: ${{ secrets.SSH_HOST }}
      #     REMOTE_USER: ${{ secrets.SSH_USER }}
      #     EXCLUDE: "api, database, fancy-spirits-backend, fancy-spirits/webpage"
      #     TARGET: ${{ secrets.SSH_TARGET_DIR }} 
      #     ARGS: "-v"

      - name: Transfer new docker-compose.yml
        uses: cross-the-world/ssh-pipeline@master
        env:
          DEPLOY_DIR: ${{ secrets.SSH_TARGET_DIR }}
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          pass: ${{ secrets.SSH_USER_PWD }}
          script: |
            cd $DEPLOY_DIR
            rm -rf web-page
            git clone https://github.com/fancy-spirits/web-page.git
            mv web-page/* .

      - name: Run new deployment
        uses: cross-the-world/ssh-pipeline@master
        env:
          DEPLOY_DIR: ${{ secrets.SSH_TARGET_DIR }}
          POSTGRES_FANCY_SPIRITS_USER: ${{ secrets.POSTGRES_FANCY_SPIRITS_USER }}
          POSTGRES_FANCY_SPIRITS_PASSWORD: ${{ secrets.POSTGRES_FANCY_SPIRITS_PASSWORD }}
          POSTGRES_ADMIN_PASSWORD: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
          DB_USER: ${{ secrets.POSTGRES_FANCY_SPIRITS_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_FANCY_SPIRITS_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          pass: ${{ secrets.SSH_USER_PWD }}
          script: |
            cd $DEPLOY_DIR
            docker compose stop
            docker compose rm -f
            docker compose pull
            DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD POSTGRES_PASSWORD=$POSTGRES_ADMIN_PASSWORD docker compose up -d